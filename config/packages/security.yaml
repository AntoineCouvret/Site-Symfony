security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # un provider c'est a quel endroit on va chercher les utilisateurs
        in_memory: { memory: ~ }
        in_database:
            entity:
                # entité qui sert à voir ou sont les utilisateurs
                class: 'App\Entity\User'
                # propriéré qui sert à l'authentification
                property: 'email'
                # si plusieurs mode de log écrire {"email", "login", "..."}
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true




            provider: in_database

            # On se connecte avec une formulaire
            form_login:
                # Lieu où se situe le formulaire
                login_path: account_login

                # Endroit à appeler pour vérifier les infos
                check_path: account_login

            logout:
                path: account_logout
                target: account_login

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
